[{"C:\\React\\AdvanceRedux\\src\\index.js":"1","C:\\React\\AdvanceRedux\\src\\App.js":"2","C:\\React\\AdvanceRedux\\src\\components\\Cart\\Cart.js":"3","C:\\React\\AdvanceRedux\\src\\components\\Layout\\Layout.js":"4","C:\\React\\AdvanceRedux\\src\\components\\Shop\\Products.js":"5","C:\\React\\AdvanceRedux\\src\\components\\Cart\\CartItem.js":"6","C:\\React\\AdvanceRedux\\src\\components\\Layout\\MainHeader.js":"7","C:\\React\\AdvanceRedux\\src\\components\\UI\\Card.js":"8","C:\\React\\AdvanceRedux\\src\\components\\Shop\\ProductItem.js":"9","C:\\React\\AdvanceRedux\\src\\components\\Cart\\CartButton.js":"10","C:\\React\\AdvanceRedux\\src\\store\\index.js":"11","C:\\React\\AdvanceRedux\\src\\store\\uiSlice.js":"12","C:\\React\\AdvanceRedux\\src\\store\\UISlice.js":"13","C:\\project\\graphql-course\\client\\src\\index.js":"14","C:\\project\\graphql-course\\client\\src\\App.js":"15","C:\\project\\graphql-course\\client\\src\\DisplayData.js":"16"},{"size":255,"mtime":1670745832305,"results":"17","hashOfConfig":"18"},{"size":389,"mtime":1670746086985,"results":"19","hashOfConfig":"18"},{"size":383,"mtime":1616596383000,"results":"20","hashOfConfig":"18"},{"size":233,"mtime":1616596383000,"results":"21","hashOfConfig":"18"},{"size":419,"mtime":1616596383000,"results":"22","hashOfConfig":"18"},{"size":710,"mtime":1616596383000,"results":"23","hashOfConfig":"18"},{"size":361,"mtime":1616596383000,"results":"24","hashOfConfig":"18"},{"size":244,"mtime":1616596383000,"results":"25","hashOfConfig":"18"},{"size":534,"mtime":1616596383000,"results":"26","hashOfConfig":"18"},{"size":486,"mtime":1670745926598,"results":"27","hashOfConfig":"18"},{"size":185,"mtime":1670745749676,"results":"28","hashOfConfig":"18"},{"size":325,"mtime":1670745525902,"results":"29","hashOfConfig":"18"},{"size":325,"mtime":1670745525902,"results":"30","hashOfConfig":"18"},{"size":197,"mtime":1690712473001,"results":"31","hashOfConfig":"32"},{"size":434,"mtime":1690713357082,"results":"33","hashOfConfig":"32"},{"size":3981,"mtime":1690720165799,"results":"34","hashOfConfig":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fwnjbl",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1e4lqk2",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"C:\\React\\AdvanceRedux\\src\\index.js",[],"C:\\React\\AdvanceRedux\\src\\App.js",[],"C:\\React\\AdvanceRedux\\src\\components\\Cart\\Cart.js",[],["70","71"],"C:\\React\\AdvanceRedux\\src\\components\\Layout\\Layout.js",[],"C:\\React\\AdvanceRedux\\src\\components\\Shop\\Products.js",[],"C:\\React\\AdvanceRedux\\src\\components\\Cart\\CartItem.js",[],"C:\\React\\AdvanceRedux\\src\\components\\Layout\\MainHeader.js",[],"C:\\React\\AdvanceRedux\\src\\components\\UI\\Card.js",[],"C:\\React\\AdvanceRedux\\src\\components\\Shop\\ProductItem.js",[],"C:\\React\\AdvanceRedux\\src\\components\\Cart\\CartButton.js",[],"C:\\React\\AdvanceRedux\\src\\store\\index.js",[],"C:\\React\\AdvanceRedux\\src\\store\\uiSlice.js",[],"C:\\React\\AdvanceRedux\\src\\store\\UISlice.js",[],"C:\\project\\graphql-course\\client\\src\\index.js",[],["72","73"],"C:\\project\\graphql-course\\client\\src\\App.js",[],"C:\\project\\graphql-course\\client\\src\\DisplayData.js",["74"],"import React, { useState } from \"react\";\r\nimport { gql, useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\r\n\r\n// GET ALL USERS\r\nconst QUERY_ALL_USERS = gql`\r\n  query GetAllUsers {\r\n    users {\r\n      id\r\n      name\r\n      age\r\n      username\r\n      nationality\r\n    }\r\n  }\r\n`;\r\n\r\n/// GET ALL MOVIES\r\nconst QUERY_ALL_MOVIES = gql`\r\n  query GetAllMovies {\r\n    movies {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n///\r\nconst GET_MOVIE_BY_NAME = gql`\r\n  query Movie($name: String!) {\r\n    movie(name: $name) {\r\n      name\r\n      yearOfPublication\r\n    }\r\n  }\r\n`;\r\n\r\n/// user create\r\nconst CREATE_USER_MUTATION = gql`\r\n  mutation CreateUser($input: CreateUserInput!) {\r\n    createUser(input: $input) {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst DisplayData = () => {\r\n  const [movieSearched, setMovieSearched] = useState(\"\");\r\n  /// create user states\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUserame] = useState(\"\");\r\n  const [age, setAge] = useState(0);\r\n  const [nationality, setNationality] = useState(\"\");\r\n\r\n  const { data, loading, error, refetch } = useQuery(QUERY_ALL_USERS);\r\n  const { data: movieData } = useQuery(QUERY_ALL_MOVIES);\r\n  const [fetchMovie, { data: movieSearchedData, error: movieError }] =\r\n    useLazyQuery(GET_MOVIE_BY_NAME);\r\n\r\n  const [createUser] = useMutation(CREATE_USER_MUTATION);\r\n\r\n  if (loading) {\r\n    return <h1>Data is Loading</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name..\"\r\n          onChange={(event) => {\r\n            setName(event.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username..\"\r\n          onChange={(event) => {\r\n            setUserame(event.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Age..\"\r\n          onChange={(event) => {\r\n            setAge(event.target.value);\r\n          }}\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nationality..\"\r\n          onChange={(event) => {\r\n            setNationality(event.target.value.toUpperCase());\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            // name: name the same\r\n            createUser({\r\n              variables: {\r\n                input: { name, username, age: Number(age), nationality },\r\n              },\r\n            });\r\n            refetch();\r\n          }}\r\n        >\r\n          Create User\r\n        </button>\r\n      </div>\r\n      {data &&\r\n        data?.users?.map((user) => {\r\n          return (\r\n            <div key={user.id}>\r\n              <h1>Name: {user.name}</h1>\r\n              <h1>User name: {user.username}</h1>\r\n              <h1>Age: {user.age}</h1>\r\n              <h1>Nationality: {user.nationality}</h1>\r\n            </div>\r\n          );\r\n        })}\r\n      {movieData &&\r\n        movieData?.movies?.map((movie) => {\r\n          return (\r\n            <div key={movie.id}>\r\n              <h1>Movie Name: {movie.name}</h1>\r\n            </div>\r\n          );\r\n        })}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Interstellar..\"\r\n          onChange={(event) => {\r\n            setMovieSearched(event.target.value);\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            fetchMovie({\r\n              variables: {\r\n                name: movieSearched,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Fetch Data\r\n        </button>\r\n        <div>\r\n          {movieSearchedData && (\r\n            <div>\r\n              <h1>MovieName:{movieSearchedData.movie.name}</h1>\r\n              <h1>\r\n                Year Of Publication:{movieSearchedData.movie.yearOfPublication}\r\n              </h1>\r\n            </div>\r\n          )}\r\n          {movieError && <h1>There was an error fetching the data</h1>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayData;\r\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":55,"column":26,"nodeType":"83","messageId":"84","endLine":55,"endColumn":31},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]