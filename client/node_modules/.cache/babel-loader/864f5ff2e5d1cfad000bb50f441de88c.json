{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\graphql-course\\\\client\\\\src\\\\DisplayData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { gql, useLazyQuery, useQuery } from \"@apollo/client\";\n\n// GET ALL USERS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_USERS = gql`\n  query GetAllUsers {\n    users {\n      id\n      name\n      age\n      username\n      nationality\n    }\n  }\n`;\n\n/// GET ALL MOVIES\nconst QUERY_ALL_MOVIES = gql`\n  query GetAllMovies {\n    movies {\n      name\n    }\n  }\n`;\n\n///\nconst GET_MOVIE_BY_NAME = gql`\n  query Movie($name: String!) {\n    movie(name: $name) {\n      name\n      yearOfPublication\n    }\n  }\n`;\nconst DisplayData = () => {\n  _s();\n  var _data$users, _movieData$movies;\n  const [movieSearched, setMovieSearched] = useState(\"\");\n  /// create user states\n\n  const [name, setName] = useState(\"\");\n  const [username, setUserame] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [nationality, setNationality] = useState(\"\");\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_ALL_USERS);\n  const {\n    data: movieData\n  } = useQuery(QUERY_ALL_MOVIES);\n  const [fetchMovie, {\n    data: movieSearchedData,\n    error: movieError\n  }] = useLazyQuery(GET_MOVIE_BY_NAME);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data is Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name..\",\n        onChange: event => {\n          setName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Age..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nationality..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), data && (data === null || data === void 0 ? void 0 : (_data$users = data.users) === null || _data$users === void 0 ? void 0 : _data$users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"User name: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Age: \", user.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Age: \", user.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Nationality: \", user.nationality]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this);\n    })), movieData && (movieData === null || movieData === void 0 ? void 0 : (_movieData$movies = movieData.movies) === null || _movieData$movies === void 0 ? void 0 : _movieData$movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Movie Name: \", movie.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this);\n    })), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Interstellar..\",\n        onChange: event => {\n          setMovieSearched(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          fetchMovie({\n            variables: {\n              name: movieSearched\n            }\n          });\n        },\n        children: [\" \", \"Fetch Data\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [movieSearchedData && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"MovieName:\", movieSearchedData.movie.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Year Of Publication:\", movieSearchedData.movie.yearOfPublication]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), movieError && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"There was an error fetching the data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayData, \"sYrPuiXaTvGwSed2zvuB1SOxxJM=\", false, function () {\n  return [useQuery, useQuery, useLazyQuery];\n});\n_c = DisplayData;\nexport default DisplayData;\nvar _c;\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"names":["React","useState","gql","useLazyQuery","useQuery","QUERY_ALL_USERS","QUERY_ALL_MOVIES","GET_MOVIE_BY_NAME","DisplayData","movieSearched","setMovieSearched","name","setName","username","setUserame","age","setAge","nationality","setNationality","data","loading","error","movieData","fetchMovie","movieSearchedData","movieError","event","target","value","users","map","user","id","movies","movie","variables","yearOfPublication"],"sources":["C:/project/graphql-course/client/src/DisplayData.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { gql, useLazyQuery, useQuery } from \"@apollo/client\";\r\n\r\n// GET ALL USERS\r\nconst QUERY_ALL_USERS = gql`\r\n  query GetAllUsers {\r\n    users {\r\n      id\r\n      name\r\n      age\r\n      username\r\n      nationality\r\n    }\r\n  }\r\n`;\r\n\r\n/// GET ALL MOVIES\r\nconst QUERY_ALL_MOVIES = gql`\r\n  query GetAllMovies {\r\n    movies {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n///\r\nconst GET_MOVIE_BY_NAME = gql`\r\n  query Movie($name: String!) {\r\n    movie(name: $name) {\r\n      name\r\n      yearOfPublication\r\n    }\r\n  }\r\n`;\r\n\r\nconst DisplayData = () => {\r\n  const [movieSearched, setMovieSearched] = useState(\"\");\r\n  /// create user states\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUserame] = useState(\"\");\r\n  const [age, setAge] = useState(0);\r\n  const [nationality, setNationality] = useState(\"\");\r\n\r\n  const { data, loading, error } = useQuery(QUERY_ALL_USERS);\r\n  const { data: movieData } = useQuery(QUERY_ALL_MOVIES);\r\n  const [fetchMovie, { data: movieSearchedData, error: movieError }] =\r\n    useLazyQuery(GET_MOVIE_BY_NAME);\r\n\r\n  if (loading) {\r\n    return <h1>Data is Loading</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name..\"\r\n          onChange={(event) => {\r\n            setName(event.target.value);\r\n          }}\r\n        />\r\n        <input type=\"text\" placeholder=\"Username..\" />\r\n        <input type=\"number\" placeholder=\"Age..\" />\r\n\r\n        <input type=\"text\" placeholder=\"Nationality..\" />\r\n        <button>Create User</button>\r\n      </div>\r\n      {data &&\r\n        data?.users?.map((user) => {\r\n          return (\r\n            <div key={user.id}>\r\n              <h1>Name: {user.name}</h1>\r\n              <h1>User name: {user.username}</h1>\r\n              <h1>Age: {user.age}</h1>\r\n              <h1>Age: {user.age}</h1>\r\n              <h1>Nationality: {user.nationality}</h1>\r\n            </div>\r\n          );\r\n        })}\r\n      {movieData &&\r\n        movieData?.movies?.map((movie) => {\r\n          return (\r\n            <div key={movie.id}>\r\n              <h1>Movie Name: {movie.name}</h1>\r\n            </div>\r\n          );\r\n        })}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Interstellar..\"\r\n          onChange={(event) => {\r\n            setMovieSearched(event.target.value);\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            fetchMovie({\r\n              variables: {\r\n                name: movieSearched,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Fetch Data\r\n        </button>\r\n        <div>\r\n          {movieSearchedData && (\r\n            <div>\r\n              <h1>MovieName:{movieSearchedData.movie.name}</h1>\r\n              <h1>\r\n                Year Of Publication:{movieSearchedData.movie.yearOfPublication}\r\n              </h1>\r\n            </div>\r\n          )}\r\n          {movieError && <h1>There was an error fetching the data</h1>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}