{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\graphql-course\\\\client\\\\src\\\\DisplayData.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_USERS = gql`\n  query GetAllUsers {\n    users {\n      id\n      name\n      age\n      username\n      nationality\n    }\n  }\n`;\nconst QUERY_ALL_MOVIES = gql`\n  query GetAllM {\n    users {\n      id\n      name\n      age\n      username\n      nationality\n    }\n  }\n`;\nconst DisplayData = () => {\n  _s();\n  var _data$users;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_ALL_USERS);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data is Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && (data === null || data === void 0 ? void 0 : (_data$users = data.users) === null || _data$users === void 0 ? void 0 : _data$users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"User name: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Age: \", user.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Age: \", user.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Nationality: \", user.nationality]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayData, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n_c = DisplayData;\nexport default DisplayData;\nvar _c;\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"names":["React","gql","useQuery","QUERY_ALL_USERS","QUERY_ALL_MOVIES","DisplayData","data","loading","error","users","map","user","name","username","age","nationality","id"],"sources":["C:/project/graphql-course/client/src/DisplayData.js"],"sourcesContent":["import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst QUERY_ALL_USERS = gql`\r\n  query GetAllUsers {\r\n    users {\r\n      id\r\n      name\r\n      age\r\n      username\r\n      nationality\r\n    }\r\n  }\r\n`;\r\n\r\nconst QUERY_ALL_MOVIES = gql`\r\n  query GetAllM {\r\n    users {\r\n      id\r\n      name\r\n      age\r\n      username\r\n      nationality\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst DisplayData = () => {\r\n  const { data, loading, error } = useQuery(QUERY_ALL_USERS);\r\n\r\n  if (loading) {\r\n    return <h1>Data is Loading</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data &&\r\n        data?.users?.map((user) => {\r\n          return (\r\n            <div key={user.id}>\r\n              <h1>Name: {user.name}</h1>\r\n              <h1>User name: {user.username}</h1>\r\n              <h1>Age: {user.age}</h1>\r\n              <h1>Age: {user.age}</h1>\r\n              <h1>Nationality: {user.nationality}</h1>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC;AAE/C,MAAMC,eAAe,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMG,gBAAgB,GAAGH,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,MAAMI,WAAW,GAAG,MAAM;EAAA;EAAA;EACxB,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGN,QAAQ,CAACC,eAAe,CAAC;EAE1D,IAAII,OAAO,EAAE;IACX,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB;EACjC;EAEA,oBACE;IAAA,UACGD,IAAI,KACHA,IAAI,aAAJA,IAAI,sCAAJA,IAAI,CAAEG,KAAK,gDAAX,YAAaC,GAAG,CAAEC,IAAI,IAAK;MACzB,oBACE;QAAA,wBACE;UAAA,qBAAWA,IAAI,CAACC,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eAC1B;UAAA,0BAAgBD,IAAI,CAACE,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACnC;UAAA,oBAAUF,IAAI,CAACG,GAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACxB;UAAA,oBAAUH,IAAI,CAACG,GAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACxB;UAAA,4BAAkBH,IAAI,CAACI,WAAW;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA,GALhCJ,IAAI,CAACK,EAAE;QAAA;QAAA;QAAA;MAAA,QAMX;IAEV,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAC,GAvBIX,WAAW;EAAA,QACkBH,QAAQ;AAAA;AAAA,KADrCG,WAAW;AAyBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}