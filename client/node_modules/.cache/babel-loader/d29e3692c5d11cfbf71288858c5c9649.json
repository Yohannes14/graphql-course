{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\graphql-course\\\\client\\\\src\\\\DisplayData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { gql, useLazyQuery, useQuery } from \"@apollo/client\";\n\n// GET ALL USERS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_USERS = gql`\n  query GetAllUsers {\n    users {\n      id\n      name\n      age\n      username\n      nationality\n    }\n  }\n`;\n\n/// GET ALL MOVIES\nconst QUERY_ALL_MOVIES = gql`\n  query GetAllMovies {\n    movies {\n      name\n    }\n  }\n`;\n\n///\nconst GET_MOVIE_BY_NAME = gql`\n   query GetMovieByName($name: $String!) {\n       movie(name: $name){\n        name\n        yearOfPublication\n       }\n\n   }\n`;\nconst DisplayData = () => {\n  _s();\n  var _data$users, _movieData$movies;\n  const [movieSearched, setMovieSearched] = useState(\"\");\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_ALL_USERS);\n  const {\n    data: movieData\n  } = useQuery(QUERY_ALL_MOVIES);\n  const [fetchMovie, {\n    data: movieSearchedData,\n    error: movieError\n  }] = useLazyQuery(GET_MOVIE_BY_NAME);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data is Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data && (data === null || data === void 0 ? void 0 : (_data$users = data.users) === null || _data$users === void 0 ? void 0 : _data$users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"User name: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Age: \", user.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Age: \", user.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Nationality: \", user.nationality]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    })), movieData && (movieData === null || movieData === void 0 ? void 0 : (_movieData$movies = movieData.movies) === null || _movieData$movies === void 0 ? void 0 : _movieData$movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Movie Name: \", movie.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this);\n    })), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Interstellar..\",\n        onChange: event => {\n          setMovieSearched(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovie,\n        children: \" Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: movieSearchedData && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"MovieName:\", movieSearchedData.movie.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Year Of Publication:\", movieSearchedData.movie.yearOfPublication]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayData, \"Wmt9gql8ZP0atuDKbnG3Y+1ykG8=\", false, function () {\n  return [useQuery, useQuery, useLazyQuery];\n});\n_c = DisplayData;\nexport default DisplayData;\nvar _c;\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"names":["React","useState","gql","useLazyQuery","useQuery","QUERY_ALL_USERS","QUERY_ALL_MOVIES","GET_MOVIE_BY_NAME","DisplayData","movieSearched","setMovieSearched","data","loading","error","movieData","fetchMovie","movieSearchedData","movieError","users","map","user","name","username","age","nationality","id","movies","movie","event","target","value","yearOfPublication"],"sources":["C:/project/graphql-course/client/src/DisplayData.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { gql, useLazyQuery, useQuery } from \"@apollo/client\";\r\n\r\n// GET ALL USERS\r\nconst QUERY_ALL_USERS = gql`\r\n  query GetAllUsers {\r\n    users {\r\n      id\r\n      name\r\n      age\r\n      username\r\n      nationality\r\n    }\r\n  }\r\n`;\r\n\r\n/// GET ALL MOVIES\r\nconst QUERY_ALL_MOVIES = gql`\r\n  query GetAllMovies {\r\n    movies {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n///\r\nconst GET_MOVIE_BY_NAME = gql`\r\n   query GetMovieByName($name: $String!) {\r\n       movie(name: $name){\r\n        name\r\n        yearOfPublication\r\n       }\r\n\r\n   }\r\n`;\r\n\r\nconst DisplayData = () => {\r\n  const [movieSearched, setMovieSearched] = useState(\"\");\r\n  const { data, loading, error } = useQuery(QUERY_ALL_USERS);\r\n  const { data: movieData } = useQuery(QUERY_ALL_MOVIES);\r\n  const [fetchMovie, { data: movieSearchedData, error: movieError }] =\r\n    useLazyQuery(GET_MOVIE_BY_NAME, );\r\n\r\n\r\n\r\n  if (loading) {\r\n    return <h1>Data is Loading</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data &&\r\n        data?.users?.map((user) => {\r\n          return (\r\n            <div key={user.id}>\r\n              <h1>Name: {user.name}</h1>\r\n              <h1>User name: {user.username}</h1>\r\n              <h1>Age: {user.age}</h1>\r\n              <h1>Age: {user.age}</h1>\r\n              <h1>Nationality: {user.nationality}</h1>\r\n            </div>\r\n          );\r\n        })}\r\n      {movieData &&\r\n        movieData?.movies?.map((movie) => {\r\n          return (\r\n            <div key={movie.id}>\r\n              <h1>Movie Name: {movie.name}</h1>\r\n            </div>\r\n          );\r\n        })}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Interstellar..\"\r\n          onChange={(event) => {\r\n            setMovieSearched(event.target.value);\r\n          }}\r\n        />\r\n        <button onClick={(fetchMovie)}> Fetch Data</button>\r\n        <div>\r\n          {movieSearchedData && (\r\n            <div>\r\n              <h1>MovieName:{movieSearchedData.movie.name}</h1>\r\n              <h1>\r\n                Year Of Publication:{movieSearchedData.movie.yearOfPublication}\r\n              </h1>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}